<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.walmart.mapper.SkuMapper" >
  <resultMap id="BaseResultMap" type="com.walmart.pojo.Sku" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createdDate" property="createddate" jdbcType="TIMESTAMP" />
    <result column="lastModifiedDate" property="lastmodifieddate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="allocatedStock" property="allocatedstock" jdbcType="INTEGER" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="exchangePoint" property="exchangepoint" jdbcType="BIGINT" />
    <result column="isDefault" property="isdefault" jdbcType="BIT" />
    <result column="marketPrice" property="marketprice" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="rewardPoint" property="rewardpoint" jdbcType="BIGINT" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.walmart.pojo.Sku" extends="BaseResultMap" >
    <result column="specificationValues" property="specificationvalues" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createdDate, lastModifiedDate, version, allocatedStock, cost, exchangePoint, 
    isDefault, marketPrice, price, rewardPoint, sn, stock, product_id
  </sql>
  <sql id="Blob_Column_List" >
    specificationValues
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.walmart.pojo.SkuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.walmart.pojo.SkuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sku
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.walmart.pojo.SkuExample" >
    delete from sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.walmart.pojo.Sku" >
    insert into sku (id, createdDate, lastModifiedDate, 
      version, allocatedStock, cost, 
      exchangePoint, isDefault, marketPrice, 
      price, rewardPoint, sn, 
      stock, product_id, specificationValues
      )
    values (#{id,jdbcType=BIGINT}, #{createddate,jdbcType=TIMESTAMP}, #{lastmodifieddate,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIGINT}, #{allocatedstock,jdbcType=INTEGER}, #{cost,jdbcType=DECIMAL}, 
      #{exchangepoint,jdbcType=BIGINT}, #{isdefault,jdbcType=BIT}, #{marketprice,jdbcType=DECIMAL}, 
      #{price,jdbcType=DECIMAL}, #{rewardpoint,jdbcType=BIGINT}, #{sn,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{productId,jdbcType=BIGINT}, #{specificationvalues,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.walmart.pojo.Sku" >
    insert into sku
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createddate != null" >
        createdDate,
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="allocatedstock != null" >
        allocatedStock,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="exchangepoint != null" >
        exchangePoint,
      </if>
      <if test="isdefault != null" >
        isDefault,
      </if>
      <if test="marketprice != null" >
        marketPrice,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="rewardpoint != null" >
        rewardPoint,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="specificationvalues != null" >
        specificationValues,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="allocatedstock != null" >
        #{allocatedstock,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="exchangepoint != null" >
        #{exchangepoint,jdbcType=BIGINT},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=BIT},
      </if>
      <if test="marketprice != null" >
        #{marketprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="rewardpoint != null" >
        #{rewardpoint,jdbcType=BIGINT},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="specificationvalues != null" >
        #{specificationvalues,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.walmart.pojo.SkuExample" resultType="java.lang.Integer" >
    select count(*) from sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sku
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createddate != null" >
        createdDate = #{record.createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastmodifieddate != null" >
        lastModifiedDate = #{record.lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.allocatedstock != null" >
        allocatedStock = #{record.allocatedstock,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.exchangepoint != null" >
        exchangePoint = #{record.exchangepoint,jdbcType=BIGINT},
      </if>
      <if test="record.isdefault != null" >
        isDefault = #{record.isdefault,jdbcType=BIT},
      </if>
      <if test="record.marketprice != null" >
        marketPrice = #{record.marketprice,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.rewardpoint != null" >
        rewardPoint = #{record.rewardpoint,jdbcType=BIGINT},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.specificationvalues != null" >
        specificationValues = #{record.specificationvalues,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sku
    set id = #{record.id,jdbcType=BIGINT},
      createdDate = #{record.createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{record.lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      allocatedStock = #{record.allocatedstock,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=DECIMAL},
      exchangePoint = #{record.exchangepoint,jdbcType=BIGINT},
      isDefault = #{record.isdefault,jdbcType=BIT},
      marketPrice = #{record.marketprice,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      rewardPoint = #{record.rewardpoint,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=BIGINT},
      specificationValues = #{record.specificationvalues,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sku
    set id = #{record.id,jdbcType=BIGINT},
      createdDate = #{record.createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{record.lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      allocatedStock = #{record.allocatedstock,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=DECIMAL},
      exchangePoint = #{record.exchangepoint,jdbcType=BIGINT},
      isDefault = #{record.isdefault,jdbcType=BIT},
      marketPrice = #{record.marketprice,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      rewardPoint = #{record.rewardpoint,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.walmart.pojo.Sku" >
    update sku
    <set >
      <if test="createddate != null" >
        createdDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="allocatedstock != null" >
        allocatedStock = #{allocatedstock,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="exchangepoint != null" >
        exchangePoint = #{exchangepoint,jdbcType=BIGINT},
      </if>
      <if test="isdefault != null" >
        isDefault = #{isdefault,jdbcType=BIT},
      </if>
      <if test="marketprice != null" >
        marketPrice = #{marketprice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="rewardpoint != null" >
        rewardPoint = #{rewardpoint,jdbcType=BIGINT},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="specificationvalues != null" >
        specificationValues = #{specificationvalues,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.walmart.pojo.Sku" >
    update sku
    set createdDate = #{createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      allocatedStock = #{allocatedstock,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      exchangePoint = #{exchangepoint,jdbcType=BIGINT},
      isDefault = #{isdefault,jdbcType=BIT},
      marketPrice = #{marketprice,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      rewardPoint = #{rewardpoint,jdbcType=BIGINT},
      sn = #{sn,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=BIGINT},
      specificationValues = #{specificationvalues,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.walmart.pojo.Sku" >
    update sku
    set createdDate = #{createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      allocatedStock = #{allocatedstock,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      exchangePoint = #{exchangepoint,jdbcType=BIGINT},
      isDefault = #{isdefault,jdbcType=BIT},
      marketPrice = #{marketprice,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      rewardPoint = #{rewardpoint,jdbcType=BIGINT},
      sn = #{sn,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>